---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-port
  labels:
    app: broker
spec:
  ports:
  - port: 2181
    name: zookeeper-port
    targetPort: 2181
    protocol: TCP
  selector:
    app: broker
---
apiVersion: v1
kind: Service
metadata:
  name: broker
  labels:
    app: broker
spec:
  ports:
  - port: 29092
    name: broker
    targetPort: 29092
    protocol: TCP
  selector:
    app: broker
  type: LoadBalancer
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: zookeeper
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
      - name: zookeeper
        image: digitalwonderland/zookeeper
        ports:
        - containerPort: 2181
        env:
        - name: ZOOKEEPER_ID
          value: "1"
        - name: ZOOKEEPER_SERVER_1
          value: zookeeper		  
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: broker
spec:
  template:
    metadata:
      labels:
        app: broker
    spec:
      containers:
      - name: broker
        image: wurstmeister/kafka
        ports:
        - containerPort: 29092
        env:
        - name: KAFKA_ADVERTISED_PORT
          value: "29092"
        - name: KAFKA_ADVERTISED_HOST_NAME
          value: aaf15eea8d95011e9b41b12b826d43e9-1166913307.us-east-1.elb.amazonaws.com
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper:2181
        - name: KAFKA_CREATE_TOPICS
          value: mytopic:2:1
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  labels:
    app: zookeeper
spec:
  ports:
  - name: client
    port: 2181
    protocol: TCP
  - name: follower
    port: 2888
    protocol: TCP
  - name: leader
    port: 3888
    protocol: TCP
  selector:
    app: zookeeper		  
    
    
 ------- link http://www.defuze.org/archives/351-running-a-zookeeper-and-kafka-cluster-with-kubernetes-on-aws.html   
