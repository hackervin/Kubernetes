---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: commonpipeline
  annotations:
    volume.beta.kubernetes.io/storage-class: "aws-efs"
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adapter-classifier-service
spec:
  selector:
    matchLabels:
      tier: backend
      run: adapter-classifier-service
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: adapter-classifier-service
    spec:
      containers:
      - name: adapter-classifier-service
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:commonpipeline-adapter-classifier-service
        imagePullPolicy: Always
        volumeMounts:
        - name: commonpipeline
          mountPath: /Holmes
          subPath: commonpipeline/Holmes
      volumes:
      - name: commonpipeline
        persistentVolumeClaim:
           claimName: commonpipeline
      imagePullSecrets:
      - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: adapter-classifier-service
  labels:
    tier: backend
    run: adapter-classifier-service
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    tier: backend
    run: adapter-classifier-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ca-dvs-ui
spec:
  selector:
    matchLabels:
      tier: backend
      run: ca-dvs-ui
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: ca-dvs-ui
    spec:
      containers:
      - name: ca-dvs-ui
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:ca_dvs_ui
        imagePullPolicy: Always
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: ca-dvs-ui
  labels:
    tier: backend
    run: ca-dvs-ui
spec:
  ports:
  - port: 4200
    protocol: TCP
  type: NodePort
  selector:
    tier: backend
    run: ca-dvs-ui
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: config-db
spec:
  selector:
    matchLabels:
      tier: backend
      run: config-db
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: config-db
    spec:
      containers:
      - name: config-db
        image: mongo
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: config-db
          mountPath: /data/db
          subPath: commonpipeline/config-db
      volumes:
       - name: config-db
         persistentVolumeClaim:
          claimName: commonpipeline
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: config-db
  labels:
    tier: backend
    run: config-db
spec:
  ports:
  - port: 27017
    protocol: TCP
  selector:
    tier: backend
    run: config-db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: configurationdetails
spec:
  selector:
    matchLabels:
      tier: backend
      run: configurationdetails
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: configurationdetails
    spec:
      containers:
      - name: configurationdetails
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:commonpipeline_dev_configurationdetails
        imagePullPolicy: Always
        imagePullPolicy: Always
        volumeMounts:
        - name: commonpipeline
          mountPath: /GA
          subPath: commonpipeline/GAV3-DC
      volumes:
       - name: commonpipeline
         persistentVolumeClaim:
          claimName: commonpipeline
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: configurationdetails
  labels:
    tier: backend
    run: configurationdetails
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    tier: backend
    run: configurationdetails
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cp-docclassifier-ui
spec:
  selector:
    matchLabels:
      tier: backend
      run: cp-docclassifier-ui
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: cp-docclassifier-ui
    spec:
      containers:
      - name:  cp-docclassifier-ui
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:cp_docclassifier_ui
        imagePullPolicy: Always
        imagePullPolicy: Always
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: cp-docclassifier-ui
  labels:
    tier: backend
    run: cp-docclassifier-ui
spec:
  ports:
  - port: 4200
    protocol: TCP
  type: NodePort
  selector:
    tier: backend
    run: cp-docclassifier-ui
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cp-dvs-ui
spec:
  selector:
    matchLabels:
      tier: backend
      run: cp-dvs-ui
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: cp-dvs-ui
    spec:
      containers:
      - name: cp-dvs-ui
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:cp_dvs_ui
        imagePullPolicy: Always
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: cp-dvs-ui
  labels:
    tier: backend
    run: cp-dvs-ui
spec:
  ports:
  - port: 8080
    protocol: TCP
  type: NodePort
  selector:
    tier: backend
    run: cp-dvs-ui
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cp-process-statistics-mlops
spec:
  selector:
    matchLabels:
      tier: backend
      run: cp-process-statistics-mlops
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: cp-process-statistics-mlops
    spec:
      containers:
      - name: cp-process-statistics-mlops
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:cp-process-statistics-mlops
        imagePullPolicy: Always
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: cp-process-statistics-mlops
  labels:
    tier: backend
    run: cp-process-statistics-mlops
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    tier: backend
    run: cp-process-statistics-mlops
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cp-ui
spec:
  selector:
    matchLabels:
      tier: backend
      run: cp-ui
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: cp-ui
    spec:
      containers:
      - name: cp-ui
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:cp_ui
        imagePullPolicy: Always
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: cp-ui
  labels:
    tier: backend
    run: cp-ui
spec:
  ports:
  - port: 4200
    protocol: TCP
  type: NodePort
  selector:
    tier: backend
    run: cp-ui
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cp-user-management
spec:
  selector:
    matchLabels:
      tier: backend
      run: cp-user-management
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: cp-user-management
    spec:
      containers:
      - name: cp-user-management
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:commonpipeline_dev_usermanagement
        imagePullPolicy: Always
        ports:
        - containerPort: 8021
        env:
        - name: allowed_origins
          value: "*"
        - name: content_origins
          value: "*"
        - name: enable_ldap
          value: "false"
        - name: ldap_domain_name
          value: "wipro.com"
        - name: ldap_url
          value: "ldap://pne-hjn-dc05.wipro.com:389/"
      imagePullSecrets:
      - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: cp-user-management
  labels:
    tier: backend
    run: cp-user-management
spec:
  ports:
  - port: 8021
    protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dashboard-service
spec:
  selector:
    matchLabels:
      tier: backend
      run: dashboard-service
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: dashboard-service
    spec:
      containers:
      - name: dashboard-service
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:commonpipeline_dashboard-service
        imagePullPolicy: Always
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: dashboard-service
  labels:
    tier: backend
    run: dashboard-service
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    tier: backend
    run: dashboard-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dc-form-extraction
spec:
  selector:
    matchLabels:
      tier: backend
      run: dc-form-extraction
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: dc-form-extraction
    spec:
      containers:
      - name: dc-form-extraction
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:commonpipeline-dc-form-extraction
        imagePullPolicy: Always
        volumeMounts:
        - name: commonpipeline
          mountPath: /Holmes
          subPath: commonpipeline/Holmes
      volumes:
       - name: commonpipeline
         persistentVolumeClaim:
          claimName: commonpipeline
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: dc-form-extraction
  labels:
    tier: backend
    run: dc-form-extraction
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    tier: backend
    run: dc-form-extraction
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dcerrorlogging
spec:
  selector:
    matchLabels:
      tier: backend
      run: dcerrorlogging
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: dcerrorlogging
    spec:
      containers:
      - name: dcerrorlogging
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:commonpipeline-dcerrorlogging
        imagePullPolicy: Always
        volumeMounts:
        - name: commonpipeline
          mountPath: /Holmes
          subPath: commonpipeline/Holmes
      volumes:
       - name: commonpipeline
         persistentVolumeClaim:
          claimName: commonpipeline
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: dcerrorlogging
  labels:
    tier: backend
    run: dcerrorlogging
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    tier: backend
    run: dcerrorlogging
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dcfileupload
spec:
  selector:
    matchLabels:
      tier: backend
      run: dcfileupload
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: dcfileupload
    spec:
      containers:
      - name: dcfileupload
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:cp-dcfileupload
        imagePullPolicy: Always
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: dcfileupload
  labels:
    tier: backend
    run: dcfileupload
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    tier: backend
    run: dcfileupload
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dcformsprocessingwrapper
spec:
  selector:
    matchLabels:
      tier: backend
      run: dcformsprocessingwrapper
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: dcformsprocessingwrapper
    spec:
      containers:
      - name: dcformsprocessingwrapper
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:commonpipeline-dcformsprocessingwrapper
        imagePullPolicy: Always
        volumeMounts:
        - name: commonpipeline
          mountPath: /Holmes
          subPath: commonpipeline/Holmes
      volumes:
       - name: commonpipeline
         persistentVolumeClaim:
          claimName: commonpipeline
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: dcformsprocessingwrapper
  labels:
    tier: backend
    run: dcformsprocessingwrapper
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    tier: backend
    run: dcformsprocessingwrapper
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dcoperationaldblogging
spec:
  selector:
    matchLabels:
      tier: backend
      run: dcoperationaldblogging
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: dcoperationaldblogging
    spec:
      containers:
      - name: dcoperationaldblogging
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:commonpipeline-dcoperationaldblogging
        imagePullPolicy: Always
        volumeMounts:
        - name: commonpipeline
          mountPath: /Holmes
          subPath: commonpipeline/Holmes
      volumes:
       - name: commonpipeline
         persistentVolumeClaim:
          claimName: commonpipeline
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: dcoperationaldblogging
  labels:
    tier: backend
    run: dcoperationaldblogging
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    tier: backend
    run: dcoperationaldblogging
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dcprocessconvertedfiles
spec:
  selector:
    matchLabels:
      tier: backend
      run: dcprocessconvertedfiles
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: dcprocessconvertedfiles
    spec:
      containers:
      - name: dcprocessconvertedfiles
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:commonpipeline-dcprocessconvertedfiles
        imagePullPolicy: Always
        volumeMounts:
        - name: commonpipeline
          mountPath: /Holmes
          subPath: commonpipeline/Holmes
      volumes:
       - name: commonpipeline
         persistentVolumeClaim:
          claimName: commonpipeline
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: dcprocessconvertedfiles
  labels:
    tier: backend
    run: dcprocessconvertedfiles
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    tier: backend
    run: dcprocessconvertedfiles
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dcprocessftpfiles
spec:
  selector:
    matchLabels:
      tier: backend
      run: dcprocessftpfiles
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: dcprocessftpfiles
    spec:
      containers:
      - name: dcprocessftpfiles
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:commonpipeline-dcprocessftpfiles
        imagePullPolicy: Always
        volumeMounts:
        - name: commonpipeline
          mountPath: /Holmes
          subPath: commonpipeline/Holmes
      volumes:
       - name: commonpipeline
         persistentVolumeClaim:
          claimName: commonpipeline
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: dcprocessftpfiles
  labels:
    tier: backend
    run: dcprocessftpfiles
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    tier: backend
    run: dcprocessftpfiles
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dcprocesshocrfiles
spec:
  selector:
    matchLabels:
      tier: backend
      run: dcprocesshocrfiles
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: dcprocesshocrfiles
    spec:
      containers:
      - name: dcprocesshocrfiles
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:commonpipeline-dcprocesshocrfiles
        imagePullPolicy: Always
        volumeMounts:
        - name: commonpipeline
          mountPath: /Holmes
          subPath: commonpipeline/Holmes
      volumes:
       - name: commonpipeline
         persistentVolumeClaim:
          claimName: commonpipeline
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: dcprocesshocrfiles
  labels:
    run: dcprocesshocrfiles
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    tier: backend
    run: dcprocesshocrfiles
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dcstartprocessingdocs
spec:
  selector:
    matchLabels:
      tier: backend
      run: dcstartprocessingdocs
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: dcstartprocessingdocs
    spec:
      containers:
      - name: dcstartprocessingdocs
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:commonpipeline-dcstartprocessingdocs
        imagePullPolicy: Always
        volumeMounts:
        - name: commonpipeline
          mountPath: /Holmes
          subPath: commonpipeline/Holmes
      volumes:
       - name: commonpipeline
         persistentVolumeClaim:
          claimName: commonpipeline
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: dcstartprocessingdocs
  labels:
    tier: backend
    run: dcstartprocessingdocs
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    tier: backend
    run: dcstartprocessingdocs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: digitized-db
spec:
  selector:
    matchLabels:
      tier: backend
      run: digitized-db
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: digitized-db
    spec:
      containers:
      - name: digitized-db
        image: mongo
        volumeMounts:
        - name: digitized-db
          mountPath: /data/db
          subPath: commonpipeline/digitized-db
      volumes:
       - name: digitized-db
         persistentVolumeClaim:
          claimName: commonpipeline
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: digitized-db
  labels:
    tier: backend
    run: digitized-db
spec:
  ports:
  - port: 27017
    protocol: TCP
  selector:
    tier: backend
    run: digitized-db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dl-attribute-extractor
spec:
  selector:
    matchLabels:
      tier: backend
      run: dl-attribute-extractor
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: dl-attribute-extractor
    spec:
      containers:
      - name: dl-attribute-extractor
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:lae-dl-attribute-extractor
        imagePullPolicy: Always
        volumeMounts:
        - name: commonpipeline
          mountPath: /Holmes
          subPath: commonpipeline/Holmes
      volumes:
       - name: commonpipeline
         persistentVolumeClaim:
          claimName: commonpipeline
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: dl-attribute-extractor
  labels:
    tier: backend
    run: dl-attribute-extractor
spec:
  ports:
  - port: 8020
    protocol: TCP
  selector:
    tier: backend
    run: dl-attribute-extractor
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: doc-type-identifier
spec:
  selector:
    matchLabels:
      tier: backend
      run: doc-type-identifier
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: doc-type-identifier
    spec:
      containers:
      - name:  doc-type-identifier
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:commonpipeline-doc-type-identifier
        imagePullPolicy: Always
        volumeMounts:
        - name:  commonpipeline
          mountPath: /Holmes
          subPath: commonpipeline/Holmes
      volumes:
       - name:  commonpipeline
         persistentVolumeClaim:
          claimName: commonpipeline
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: doc-type-identifier
  labels:
    tier: backend
    run: doc-type-identifier
spec:
  ports:
  - port: 8895
    protocol: TCP
  selector:
    tier: backend
    run: doc-type-identifier
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: document-alignment
spec:
  selector:
    matchLabels:
      tier: backend
      run: document-alignment
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: document-alignment
    spec:
      containers:
      - name:  document-alignment
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:erm_document_alignment
        imagePullPolicy: Always
        volumeMounts:
        - name:  commonpipeline
          mountPath: /Holmes
          subPath: commonpipeline/Holmes
      volumes:
       - name:  commonpipeline
         persistentVolumeClaim:
          claimName: commonpipeline
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: document-alignment
  labels:
    tier: backend
    run: document-alignment
spec:
  ports:
  - port: 8885
    protocol: TCP
  selector:
    tier: backend
    run: document-alignment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: document-type-identifier
spec:
  selector:
    matchLabels:
      tier: backend
      run: document-type-identifier
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: document-type-identifier
    spec:
      containers:
      - name:  document-type-identifier
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:commonpipeline_document_type_identifier
        imagePullPolicy: Always
        volumeMounts:
        - name:  commonpipeline
          mountPath: /Holmes
          subPath: commonpipeline/Holmes
      volumes:
       - name:  commonpipeline
         persistentVolumeClaim:
          claimName: commonpipeline
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: document-type-identifier
  labels:
    tier: backend
    run: document-type-identifier
spec:
  ports:
  - port: 8895
    protocol: TCP
  selector:
    run: document-type-identifier
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dvs-garnish-ui
spec:
  selector:
    matchLabels:
      tier: backend
      run: dvs-garnish-ui
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: dvs-garnish-ui
    spec:
      containers:
      - name:  dvs-garnish-ui
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:commonpipeline-dvs-garnish-ui
        imagePullPolicy: Always
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: dvs-garnish-ui
  labels:
    tier: backend
    run: dvs-garnish-ui
spec:
  ports:
  - port: 8080
    protocol: TCP
  type: NodePort
  selector:
    tier: backend
    run: dvs-garnish-ui
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dvs-garnishment-alight
spec:
  selector:
    matchLabels:
      tier: backend
      run: dvs-garnishment-alight
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: dvs-garnishment-alight
    spec:
      containers:
      - name:  dvs-garnishment-alight
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:dvs-garnishment-alight
        imagePullPolicy: Always
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: dvs-garnishment-alight
  labels:
    tier: backend
    run: dvs-garnishment-alight
spec:
  ports:
  - port: 8080
    protocol: TCP
  type: NodePort
  selector:
    tier: backend
    run: dvs-garnishment-alight
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: file-converter-service
spec:
  selector:
    matchLabels:
      tier: backend
      run: file-converter-service
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: file-converter-service
    spec:
      containers:
      - name:  file-converter-service
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:commonpipeline-file-converter-service
        imagePullPolicy: Always
        volumeMounts:
        - name:  commonpipeline
          mountPath: /Holmes
          subPath: commonpipeline/Holmes
      volumes:
       - name:  commonpipeline
         persistentVolumeClaim:
          claimName: commonpipeline
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: file-converter-service
  labels:
    tier: backend
    run: file-converter-service
spec:
  ports:
  - port: 5005
    protocol: TCP
  selector:
    tier: backend
    run: file-converter-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ftr-extraction-service
spec:
  selector:
    matchLabels:
      tier: backend
      run: ftr-extraction-service
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: ftr-extraction-service
    spec:
      containers:
      - name:  ftr-extraction-service
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:commonp_ftr_extraction_service
        imagePullPolicy: Always
        volumeMounts:
        - name:  commonpipeline
          mountPath: /Holmes
          subPath: commonpipeline/Holmes
      volumes:
       - name:  commonpipeline
         persistentVolumeClaim:
          claimName: commonpipeline
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: ftr-extraction-service
  labels:
    tier: backend
    run: ftr-extraction-service
spec:
  ports:
  - port: 8040
    protocol: TCP
  selector:
    tier: backend
    run: ftr-extraction-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hocr-service
spec:
  selector:
    matchLabels:
      tier: backend
      run: hocr-service
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: hocr-service
    spec:
      containers:
      - name:  hocr-service
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:commonpipeline_hocr-service
        imagePullPolicy: Always
        volumeMounts:
        - name:  commonpipeline
          mountPath: /Holmes
          subPath: commonpipeline/Holmes
      volumes:
       - name:  commonpipeline
         persistentVolumeClaim:
          claimName: commonpipeline
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: hocr-service
  labels:
    tier: backend
    run: hocr-service
spec:
  ports:
  - port: 6001
    protocol: TCP
  selector:
    tier: backend
    run: hocr-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: it-ops-dao
spec:
  selector:
    matchLabels:
      tier: backend
      run: it-ops-dao
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: it-ops-dao
    spec:
      containers:
      - name:  it-ops-dao
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:commonpipeline_it-ops-dao
        imagePullPolicy: Always
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: it-ops-dao
  labels:
    tier: backend
    run: it-ops-dao
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    tier: backend
    run: it-ops-dao
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: it-ops-ui
spec:
  selector:
    matchLabels:
      run: it-ops-ui
      tier: backend
  replicas: 1
  template:
    metadata:
      labels:
        run: it-ops-ui
        tier: backend
    spec:
      containers:
      - name:  it-ops-ui
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:it_ops_ui
        imagePullPolicy: Always
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: it-ops-ui
  labels:
    run: it-ops-ui
    tier: backend
spec:
  ports:
  - port: 4200
    protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: it-ops-ui-lb
spec:
  ports:
  - port: 443
    name: it-ops-ui-lb
    targetPort: 4200
    protocol: TCP
  selector:
    run: it-ops-ui
    tier: backend
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-connector
spec:
  selector:
    matchLabels:
      tier: backend
      run: jenkins-connector
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: jenkins-connector
    spec:
      containers:
      - name:  jenkins-connector
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:jenkins-connector
        imagePullPolicy: Always
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-connector
  labels:
    tier: backend
    run: jenkins-connector
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    tier: backend
    run: jenkins-connector
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lease-attribute-extractor
spec:
  selector:
    matchLabels:
      tier: backend
      run: lease-attribute-extractor
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: lease-attribute-extractor
    spec:
      containers:
      - name:  lease-attribute-extractor
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:lease-attribute-extractor
        imagePullPolicy: Always
        volumeMounts:
        - name:  commonpipeline
          mountPath: /Holmes
          subPath: commonpipeline/Holmes
      volumes:
       - name:  commonpipeline
         persistentVolumeClaim:
          claimName: commonpipeline
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: lease-attribute-extractor
  labels:
    tier: backend
    run: lease-attribute-extractor
spec:
  ports:
  - port: 8005
    protocol: TCP
  selector:
    tier: backend
    run: lease-attribute-extractor
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: operational-db
spec:
  selector:
    matchLabels:
      tier: backend
      run: operational-db
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: operational-db
    spec:
      containers:
      - name: operational-db
        image: mongo
        volumeMounts:
        - name: operational-db
          mountPath: /data/db
          subPath: commonpipeline/operational-db
      volumes:
       - name: operational-db
         persistentVolumeClaim:
          claimName: commonpipeline
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: operational-db
  labels:
    tier: backend
    run: operational-db
spec:
  ports:
  - port: 27017
    protocol: TCP
  selector:
    tier: backend
    run: operational-db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orch-attr-extractor
spec:
  selector:
    matchLabels:
      tier: backend
      run: orch-attr-extractor
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: orch-attr-extractor
    spec:
      containers:
      - name: orch-attr-extractor
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:commonpipeline_orch_attr_extractor
        imagePullPolicy: Always
        volumeMounts:
        - name: commonpipeline
          mountPath: /Holmes
          subPath: commonpipeline/Holmes
      volumes:
       - name: commonpipeline
         persistentVolumeClaim:
          claimName: commonpipeline
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: orch-attr-extractor
  labels:
    tier: backend
    run: orch-attr-extractor
spec:
  ports:
  - port: 5001
    protocol: TCP
  selector:
    tier: backend
    run: orch-attr-extractor
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pdf-to-html
spec:
  selector:
    matchLabels:
      tier: backend
      run: pdf-to-html
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: pdf-to-html
    spec:
      containers:
      - name: pdf-to-html
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:commonpipeline-pdf-to-html
        imagePullPolicy: Always
        volumeMounts:
        - name: commonpipeline
          mountPath: /Holmes
          subPath: commonpipeline/Holmes
      volumes:
       - name: commonpipeline
         persistentVolumeClaim:
          claimName: commonpipeline
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: pdf-to-html
  labels:
    tier: backend
    run: pdf-to-html
spec:
  ports:
  - port: 5001
    protocol: TCP
  selector:
    tier: backend
    run: pdf-to-html
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: portaldao
spec:
  selector:
    matchLabels:
      tier: backend
      run: portaldao
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: portaldao
    spec:
      containers:
      - name: portaldao
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:commonpipeline_dev_portaldao
        imagePullPolicy: Always
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: portaldao
  labels:
    tier: backend
    run: portaldao
spec:
  ports:
  - port: 8022
    protocol: TCP
  selector:
    tier: backend
    run: portaldao
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rolesandtasks
spec:
  selector:
    matchLabels:
      tier: backend
      run: rolesandtasks
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: rolesandtasks
    spec:
      containers:
      - name: rolesandtasks
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:commonpipeline-rolesandtasks
        imagePullPolicy: Always
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: rolesandtasks
  labels:
    tier: backend
    run: rolesandtasks
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    tier: backend
    run: rolesandtasks
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rulesvalidator
spec:
  selector:
    matchLabels:
      tier: backend
      run: rulesvalidator
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: rulesvalidator
    spec:
      containers:
      - name: rulesvalidator
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:rulesvalidator
        imagePullPolicy: Always
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: rulesvalidator
  labels:
    tier: backend
    run: rulesvalidator
spec:
  ports:
  - port: 8083
    protocol: TCP
  selector:
    tier: backend
    run: rulesvalidator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sop-automation
spec:
  selector:
    matchLabels:
      tier: backend
      run: sop-automation
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: sop-automation
    spec:
      containers:
      - name: sop-automation
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:sop-automation
        imagePullPolicy: Always
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: sop-automation
  labels:
    tier: backend
    run: sop-automation
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    tier: backend
    run: sop-automation
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: studio-notifier-service
spec:
  selector:
    matchLabels:
      tier: backend
      run: studio-notifier-service
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: studio-notifier-service
    spec:
      containers:
      - name: studio-notifier-service
        imagePullPolicy: Always
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:commonpipeline_studio-notifier-service
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: studio-notifier-service
  labels:
    tier: backend
    run: studio-notifier-service
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    tier: backend
    run: studio-notifier-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traininginitiator
spec:
  selector:
    matchLabels:
      tier: backend
      run: traininginitiator
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: traininginitiator
    spec:
      containers:
      - name: traininginitiator
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:commonpipeline_traininginitiator
        imagePullPolicy: Always
      imagePullSecrets:
       - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: traininginitiator
  labels:
    tier: backend
    run: traininginitiator
spec:
  ports:
  - port: 8023
    protocol: TCP
  selector:
    tier: backend
    run: traininginitiator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-management
spec:
  selector:
    matchLabels:
      tier: backend
      run: user-management
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: user-management
    spec:
      containers:
      - name: user-management
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:v3-portal-user-management
        imagePullPolicy: Always
        env:
        - name: allowed_origins
          value: "http://10.235.112.135:4200,http://localhost:4400,http://localhost:4200,http://10.235.112.135:8032"
        - name: content_origins
          value: "http://10.235.112.135:4200"
        - name: enable_ldap
          value: "false"
        - name: ldap_domain_name
          value: "wipro.com"
        - name: ldap_url
          value: "ldap://pne-hjn-dc05.wipro.com:389/"
      imagePullSecrets:
      - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: user-management
  labels:
    tier: backend
    run: user-management
spec:
  ports:
  - port: 8021
    protocol: TCP
  selector:
    tier: backend
    run: user-management
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: usermanagement-contract-abstraction-dev
spec:
  selector:
    matchLabels:
      tier: backend
      run: usermanagement-contract-abstraction-dev
  replicas: 1
  template:
    metadata:
      labels:
        tier: backend
        run: usermanagement-contract-abstraction-dev
    spec:
      containers:
      - name: usermanagement-contract-abstraction-dev
        image: 091307694858.dkr.ecr.us-west-2.amazonaws.com/commonpipeline:usermanagement_contract-abstraction-dev
        imagePullPolicy: Always
        env:
        - name: allowed_origins
          value: "http://10.235.112.135:4200,http://localhost:4400,http://localhost:4200,http://10.235.112.135:8032"
        - name: content_origins
          value: "http://10.235.112.135:4200"
        - name: enable_ldap
          value: "false"
        - name: ldap_domain_name
          value: "wipro.com"
        - name: ldap_url
          value: "ldap://pne-hjn-dc05.wipro.com:389/"
      imagePullSecrets:
      - name: aws-registry
---
apiVersion: v1
kind: Service
metadata:
  name: usermanagement-contract-abstraction-dev
  labels:
    tier: backend
    run: usermanagement-contract-abstraction-dev
spec:
  ports:
  - port: 8021
    protocol: TCP
  selector:
    tier: backend
    run: usermanagement-contract-abstraction-dev
